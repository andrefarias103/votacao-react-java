generator client {
        provider = "prisma-client-js"
}

datasource db {
        provider = "postgresql"
        url      = env("DATABASE_URL")
}

model Usuario {
        id        Int       @id @default(autoincrement())
        login     String
        senha     String
        nome      String
        endereco  String
        email     String
        cpf       String
        tipo      String
        voto      Votacao[] @relation("usuario")
        Pauta     Pauta[]
        createdAt DateTime  @default(now())
        updatedAt DateTime  @default(now())
        deletedAt DateTime  @default(now())
}

model Votacao {
        id           Int      @id @default(autoincrement())
        usuario      Usuario  @relation("usuario", fields: [usuarioId], references: [id], onDelete: Cascade)
        usuarioId    Int
        opcaoVotada  String   @default("NÃ£o")
        dataHoraVoto String
        pauta        Pauta    @relation("pauta", fields: [pautaId], references: [id], onDelete: Cascade)
        pautaId      Int
        createdAt    DateTime @default(now())
        updatedAt    DateTime @default(now())
        deletedAt    DateTime @default(now())
}

model Pauta {
        id          Int        @id @default(autoincrement())
        titulo      String
        descricao   String
        categoria   Categoria? @relation("categoria", fields: [categoriaId], references: [id], onDelete: Cascade)
        categoriaId Int
        Sessao      Sessao[]
        votacao     Votacao[]  @relation("pauta")
        usuario     Usuario    @relation(fields: [usuarioId], references: [id])
        usuarioId   Int
        createdAt   DateTime   @default(now())
        updatedAt   DateTime   @default(now())
        deletedAt   DateTime   @default(now())
}

model Categoria {
        id        Int      @id @default(autoincrement())
        nome      String   @unique
        descricao String
        pautas    Pauta[]  @relation("categoria")
        createdAt DateTime @default(now())
        updatedAt DateTime @default(now())
        deletedAt DateTime @default(now())
}

model Sessao {
        id             Int               @id @default(autoincrement())
        Pauta          Pauta?            @relation(fields: [pautaId], references: [id])
        pautaId        Int?
        dataHoraInicio String
        dataHoraFim    String
        status         StatusSessaoEnum? @default(STATUS_AGUARDANDO)
        createdAt      DateTime          @default(now())
        updatedAt      DateTime          @default(now())
        deletedAt      DateTime          @default(now())
}

enum StatusSessaoEnum {
        STATUS_AGUARDANDO
        STATUS_INICIADA
        STATUS_CONCLUIDA
        STATUS_CANCELADA
}
